## The Name specified is only used in/for the manual page
Name ASPZap

## Usage specifies a one-liner which is printed as part of
## usage-message. It is also used in the NAME-section of the manual
## page as a short description.
Usage {Read in ASP FITS/ascii profile (ASPRotateAsc for the latter) and perform scan/channel zapping for later omission in reprocessing}

## The Version specified is printed as part of the usage-message. The
## example used here records the date of the clig-run as the version.
Version [exec date +%Y-%m-%d]

## Commandline specifies the name of a slot in the generated struct
## which will be set to a newly allocated string holding the
## concatenated command line. This is particularly useful for programs
## which want to record their calling sequence somewhere, e.g. in a in
## output file to document how it was generated.
Commandline tool

########################################################################
## FLAG OPTIONS
########################################################################

## Verbose mode
Flag -v Verbose {Switch on verbose program operation}

## Output pazi-compatible command line to file for use with psrchive
Flag -paz Paz {Output psrchive-compatible command line as with pazi}

## Turn off dedispersion (which is automatic for PSRFITS format files)
Flag -nodedisp NoDedisp {Turn off dedispersion}

########################################################################
## STRING OPTIONS
########################################################################

## Input data file (ASP ascii file for DoRotate and ASP FITS for ASPRotate)
String -infile Infile {Input ASP data file} \
    -m \
    -c 1 1

## Optional input zap file.  If the name of this file is the same as the 
## suggested zap file name, the new output file will be given a "_new" 
## qualifier.  Input zap file will be used to initialize zap array before 
## reading input data file.
String -zapfile ZapIn {Input zap file with same format as output file.  Will be used to initialize zap array} \
    -c 1 1

## Optional standard template profile to match against each input scan 
## in input data fits file
String -template Template {Input template file to correlate with each data file scan} \
    -c 1 1

## use polyco file to adjust phases and spin frequencies of pulsar
String -polyco Polyfile {Use polyco file to adjust pulsar phases} \
    -c 0 1 
#    -d "polyco.dat"

## Use par file to adjust and align pulse phases
String -parfile ParFile {Use input parameter file to realign pulse profiles} \
    -c 1 1

## Look for and use par file for this pulsar to realign pulse profiles
#String -psr PSRName {Find and use parameter file for this pulsar to realign profiles.  Will search directory $TEMPO/tzpar} \
#    -c 1 1


########################################################################
## INTEGER OPTIONS
########################################################################

## Number of histogram bins
Int -nbinhist NBinHist {Number of bins for histograms} \
     -r 0 oo \
     -c 1 1

########################################################################
## FLOAT OPTIONS
########################################################################

## Rotate by this angle (in radians)
#Float -byangle ByAngle {Rotate by this much (in radians)} \
#     -m \
#     -r 0.0 oo \
#     -c 1 1
